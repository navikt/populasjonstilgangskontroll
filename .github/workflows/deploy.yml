name: Build and deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    name: build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Sjekker ut kode
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Installerer cosign
        uses: sigstore/cosign-installer@main
        with:
           cosign-release: v1.3.1

      - name: Verifiserer distroless base-image
        run: cosign verify --key distroless.pub gcr.io/distroless/java21

      - name: Setter tag-navn
        run: echo "TAG=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Login GAR
        uses: nais/login@v0
        with:
          team: tilgangsmaskin

      - name: Test og bygg
        id: kompiler
        run: |
          echo "image=${{ env.IMAGE }}:${{ env.TAG }}" >> $GITHUB_OUTPUT          
          ./gradlew jib -Djib.to.tags=latest,${TAG} -Djib.to.image=${{ env.IMAGE }}:${{ env.TAG }}
          echo "DIGEST=$(cat build/jib-image.digest)" >> $GITHUB_ENV
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

      - name: Attest and sign
        uses: nais/attest-sign@v1.5.7
        with:
          image_ref: ${{env.IMAGE}}@${{env.DIGEST}}
          sbom: build/reports/application.cdx.json

    outputs:
      image: ${{ steps.kompiler.outputs.image }}

  deploy:
    permissions:
      contents: write
      id-token: write
    strategy:
      matrix:
        cluster: [ dev-gcp ]
    name: Deploy til ${{matrix.cluster}}
    needs: build
    runs-on: ubuntu-latest
    environment: ${{matrix.cluster}}:tilgangsmaskin
    env:
      PRINT_PAYLOAD: true
      TIMEOUT: 30m
      RESOURCE: .nais/naiserator.yaml
      CLUSTER: ${{matrix.cluster}}
      VARS: .nais/${{matrix.cluster}}.json
      IMAGE: ${{needs.build.outputs.image}}
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2


